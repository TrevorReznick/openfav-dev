---
import { twMerge } from 'tailwind-merge';

interface Props {
  text: string;
  variant?: 'getStarted' | 'liveDemo' | 'googleSignIn' | 'default';
  ariaLabel?: string;
  url?: string;
  className?: string;
  type?: 'button' | 'submit' | 'reset';
  name?: string;
  value?: string;
  disabled?: boolean;
  svgContent?: string | undefined;
}

const {
  text,
  variant = 'default',
  ariaLabel,
  url,
  className = '',
  type = 'button',
  name,
  value,
  disabled = false,
  svgContent
} = Astro.props;

const variants = {
    getStarted: 'bg-primaryColor hover:bg-secondaryColor border-primaryColor',
    liveDemo: 'bg-bgDark2 hover:bg-bgDark3 border-primaryColor',
    Login: 'class="w-full px-3 py-4 text-white bg-indigo-500 rounded-md focus:bg-indigo-600 focus:outline-none',
    googleSignIn: 'w-full py-3 px-4 border border-mainBorder bg-bgDark2 hover:bg-bgDark3Hover text-primaryText focus:ring-2 focus:ring-primaryColor',
    default: 'bg-indigo-500 hover:bg-indigo-600 text-white'
};

const baseClasses = 'rounded-lg font-medium text-sm inline-flex justify-center items-center gap-x-2 transition';

const buttonClasses = twMerge(
  baseClasses,
  variants[variant],
  disabled ? 'opacity-50 pointer-events-none' : '',
  className
);

// Funzione per renderizzare l'SVG se presente
const renderSVG = () => {
  return svgContent ? 
    `<svg class="w-4 h-auto" width="46" height="47" viewBox="0 0 46 47" fill="none">${svgContent}</svg>`
    : ''
}
---

{
  url ? (
    <a
      href={url}
      class={buttonClasses}
      aria-label={ariaLabel || text}
    >
      {svgContent && <Fragment set:html={renderSVG()} />}
      {text}
    </a>
  ) : (
    <button
      type={type}
      name={name}
      value={value}
      disabled={disabled}
      class={buttonClasses}
      aria-label={ariaLabel || text}
    >
      {svgContent && <Fragment set:html={renderSVG()} />}
      {text}
    </button>
  )
}
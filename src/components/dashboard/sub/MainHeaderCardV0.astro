<!-- MainHeaderCard.astro -->
---
import { Activity, Clock, Link, List, FolderHeart, Folder, Bot, Book, Star, Bookmark, Logs } from 'lucide-react'
import type { CardProps, ActivityItem } from '~/types'
import type { MyIconType } from '~/types'
import type { LucideProps } from 'lucide-react'

interface Props extends CardProps {}

const { cardTitle, cardIcon, activities, action_url } = Astro.props

export const iconMap: Record<MyIconType, React.FC<LucideProps>> = {
  activity: Activity,
  bot: Bot,
  book: Book,
  bookmark: Bookmark,
  clock: Clock,
  folder: Folder,
  link: Link,
  list: List,
  logs: Logs,
  folderHeart: FolderHeart,
  star: Star
}

console.log('hey ' + cardIcon)

const IconComponent = iconMap[cardIcon as MyIconType] || iconMap.link
---

<div class="bg-white rounded-lg shadow-sm p-4 flex flex-col justify-between h-full">
  <div class="flex flex-row justify-center items-center gap-2 pt-4 mb-6">
    <IconComponent className="w-5 h-5 text-indigo-600" />
    <h2 class="text-xl font-semibold text-gray-900">{cardTitle}</h2>
  </div>
  <div class="relative flex flex-col flex-1 justify-between">
    <div class="flex flex-col justify-start space-y-4">
      {activities.map((activity: ActivityItem) => {
        const ActionIcon = iconMap[activity.actionIcon]
        return (
          <div class="flex items-start gap-3">
            <div class="flex-shrink-0">
              {ActionIcon && <ActionIcon className="w-5 h-5 text-indigo-600" />}
            </div>
            <div class="flex flex-col">
              {activity.url && (
                <p class="text-sm text-blue-500 hover:underline">
                  <a href={activity.url} target="_blank" rel="noopener noreferrer">{activity.url}</a>
                </p>
              )}
              <p class="text-sm text-gray-900">
                {activity.action}
              </p>
              {activity.description && (
                <p class="text-sm text-gray-500 mt-1">
                  {activity.description}
                </p>
              )}
              {activity.timestamp && (
                <p class="text-sm text-gray-500 mt-1">
                  {activity.timestamp}
                </p>
              )}
            </div>
          </div>
        )
      })}
    </div>
    <div class="mt-auto flex justify-center items-center text-center">
      <a href={action_url} class="text-blue-500 hover:underline">View All</a>
    </div>
  </div>
</div>
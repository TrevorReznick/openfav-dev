---

import { Activity, Clock, Link, List, FolderHeart, Folder, Bot, Book, Star, Bookmark, Logs} from 'lucide-react'
import type { CardProps, ActivityItem } from '~/types'
import LinkViewAll from '~/components/dashboard/sub/LinkViewAll.astro'

const iconMap = {
    Activity,
    Bot,
    Book,
    Bookmark,
    Clock,
    Folder,
    Link,
    List,
    Logs,
    FolderHeart,
    Star
}

interface Props extends CardProps {}

const { cardName, cardIcon, activities} = Astro.props

const CardIcon = iconMap[cardIcon]

const test = cardName

const newGenericActivityData: CardProps = {
  cardName: 'New Generic Activity',
  cardIcon: 'Activity',
  activities: [
    {
      action: 'Created List',
      actionIcon: 'Folder',
      timestamp: '1 hour ago',
      name: 'newuser@example.com'
    },
    {
      action: 'Added link',
      actionIcon: 'Link',
      timestamp: '2 hours ago',
      name: 'newuser@example.com'
    }
  ]
}

function renderIcon(activity: ActivityItem) {
    const IconComponent = iconMap[activity.actionIcon]
    return IconComponent ? <IconComponent className="w-5 h-5 text-indigo-600" /> : null
}





/*const formatItemText = (item) => {
  if (typeof itemText === 'function') {
    return itemText(item)
  }
  return itemText || 'You created the list';
}

const formatDescriptionText = (item) => {
  if (typeof descriptionText === 'function') {
    return descriptionText(item);
  }
  return descriptionText || item.description;
}
*/
---

<div class="bg-white rounded-lg shadow-sm p-4 flex flex-col justify-between h-full">
  <div class="flex flex-row justify-center items-center gap-2 pt-4 mb-6">
    <CardIcon className="w-5 h-5 text-indigo-600" />
    <h2 class="text-xl font-semibold text-gray-900">{test}</h2>
  </div>
  <div class="relative flex flex-col flex-1 justify-between">
    <div class="flex flex-col justify-start space-y-4">
      {activities.map((activity: ActivityItem) => (
        <div class="flex items-start gap-3">
            <div class="flex-shrink-0">
                {
                    renderIcon(activity)
                }
            </div>
            <div class="flex flex-col">
                <p class="text-sm text-gray-900">
                    <span class="font-medium">You</span> 
                    {activity.name && `${activity.name}: `}{activity.action}
                </p>
                <div class="flex items-center gap-1 mt-1 text-sm text-gray-500">
                <span>{activity.timestamp ? activity.timestamp : (activity.action)}</span>
                </div>
            </div>
            </div>
      ))}
    </div>
    <div class="mt-4">
      <LinkViewAll href="https://example.com" />
    </div>
  </div>
</div>